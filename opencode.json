{
  "$schema": "https://opencode.ai/config.json",
  "model": "{env:OPENCODE_MODEL}",
  "small_model": "{env:OPENCODE_SMALL_MODEL}",
  "agent": {
    "orchestrator": {
      "description": "Master coordinator for Tina AI Assistant development - now handles direct coding implementation",
      "mode": "primary",
      "model": "{env:OPENCODE_MODEL}",
      "prompt": "{file:./prompts/orchestrator.txt}",
      "temperature": 0.3,
      "permission": {
        "edit": "allow",
        "bash": {
          "*": "ask",
          "git *": "allow",
          "cd *": "allow",
          "ls": "allow",
          "find": "allow",
          "grep": "allow",
          "cat": "allow",
          "head": "allow",
          "tail": "allow",
          "wc": "allow",
          "sed": "allow",
          "awk": "allow",
          "sort": "allow",
          "uniq": "allow",
          "mkdir": "allow",
          "rm": "allow",
          "cp": "allow",
          "mv": "allow",
          "chmod": "allow",
          "chown": "ask",
          "sudo": "deny",
          "git push": "ask",
          "git push --force": "deny",
          "rm -rf /": "deny",
          "terraform *": "deny",
          "docker *": "ask",
          "kubectl *": "ask"
        },
        "webfetch": "allow"
      },
      "tools": {
        "read": true,
        "grep": true,
        "glob": true,
        "list": true,
        "bash": true,
        "edit": true,
        "write": true,
        "sequential-thinking": true,
        "context7": false,
        "serena": true,
        "tavily-mcp": false,
        "firecrawl-mcp": false,
        "dart": false
      }
    },
    "researcher": {
      "description": "Unified researcher combining online documentation, project docs, and code pattern analysis",
      "mode": "subagent",
      "model": "{env:OPENCODE_SMALL_MODEL}",
      "prompt": "{file:./prompts/researcher.txt}",
      "temperature": 0.15,
      "permission": {
        "edit": "deny",
        "bash": {
          "*": "deny",
          "find": "allow",
          "grep": "allow",
          "ls": "allow",
          "cat": "allow",
          "head": "allow",
          "tail": "allow",
          "wc": "allow",
          "sort": "allow",
          "uniq": "allow"
        },
        "webfetch": "allow"
      },
      "tools": {
        "webfetch": true,
        "read": true,
        "grep": true,
        "glob": true,
        "list": true,
        "bash": true,
        "edit": false,
        "write": false,
        "tavily-mcp": true,
        "firecrawl-mcp": true,
        "context7": true,
        "serena_read_memory": true,
        "serena_list_memories": true,
        "serena_write_memory": true,
        "serena_delete_memory": false,
        "serena_replace_symbol_body": false,
        "serena_insert_after_symbol": false,
        "serena_insert_before_symbol": false,
        "serena_activate_project": false,
        "serena_onboarding": false,
        "serena_get_current_config": false,
        "serena_check_onboarding_performed": false,
        "serena_think_about_collected_information": false,
        "serena_think_about_task_adherence": false,
        "serena_think_about_whether_you_are_done": false
      }
    },
    "solution-generator": {
      "description": "Generates creative solution approaches and selects optimal solution",
      "mode": "subagent",
      "model": "{env:OPENCODE_MODEL}",
      "prompt": "{file:./prompts/solution-generator.txt}",
      "temperature": 0.6,
      "permission": {
        "edit": "deny",
        "bash": {
          "*": "deny"
        },
        "webfetch": "deny"
      },
      "tools": {
        "read": true,
        "bash": false,
        "edit": false,
        "write": false,
        "sequential-thinking": true,
        "context7": true,
        "serena_read_memory": true,
        "serena_list_memories": true,
        "serena_write_memory": false,
        "serena_delete_memory": false,
        "serena_replace_symbol_body": false,
        "serena_insert_after_symbol": false,
        "serena_insert_before_symbol": false,
        "serena_activate_project": false,
        "serena_onboarding": false,
        "serena_get_current_config": false,
        "serena_check_onboarding_performed": false,
        "serena_think_about_collected_information": false,
        "serena_think_about_task_adherence": false,
        "serena_think_about_whether_you_are_done": false
      }
    },
    "reviewer": {
      "description": "Reviews code for best practices and potential issues",
      "mode": "subagent",
      "model": "{env:OPENCODE_MODEL}",
      "prompt": "{file:./prompts/reviewer.txt}",
      "temperature": 0.0,
      "permission": {
        "edit": "deny",
        "bash": {
          "*": "deny",
          "find": "allow",
          "grep": "allow",
          "ls": "allow",
          "cat": "allow",
          "head": "allow",
          "tail": "allow",
          "wc": "allow",
          "sort": "allow",
          "uniq": "allow",
          "sed": "allow",
          "awk": "allow"
        },
        "webfetch": "deny"
      },
      "tools": {
        "read": true,
        "grep": true,
        "glob": true,
        "list": true,
        "bash": true,
        "edit": false,
        "write": false,
        "serena": true,
        "context7": true,
        "serena_replace_symbol_body": false,
        "serena_insert_after_symbol": false,
        "serena_insert_before_symbol": false,
        "serena_activate_project": false,
        "serena_onboarding": false,
        "serena_get_current_config": false,
        "serena_check_onboarding_performed": false,
        "serena_think_about_task_adherence": false,
        "serena_think_about_whether_you_are_done": false
      }
    },
    "dart-ops": {
      "description": "Dart/Flutter operations specialist for package management, building, analysis, and code generation",
      "mode": "subagent",
      "model": "{env:OPENCODE_SMALL_MODEL}",
      "prompt": "{file:./prompts/dart-ops.txt}",
      "temperature": 0.0,
      "permission": {
        "edit": "deny",
        "bash": {
          "fvm *": "allow",
          "melos *": "allow",
          "flutter *": "allow",
          "dart *": "allow",
          "cd *": "allow",
          "ls": "allow",
          "find": "allow",
          "grep": "allow",
          "cat": "allow",
          "head": "allow",
          "tail": "allow",
          "wc": "allow",
          "mkdir": "allow",
          "rm": "allow",
          "cp": "allow",
          "mv": "allow",
          "sed": "allow",
          "awk": "allow",
          "sort": "allow",
          "uniq": "allow"
        },
        "webfetch": "deny"
      },
      "tools": {
        "read": true,
        "bash": true,
        "grep": true,
        "glob": true,
        "list": true,
        "edit": false,
        "write": false,
        "sequential-thinking": false,
        "context7": false,
        "serena": false,
        "tavily-mcp": false,
        "firecrawl-mcp": false,
        "dart": true
      }
    },
    "tester": {
      "description": "Runs tests and provides analysis feedback on coverage and results",
      "mode": "subagent",
      "model": "{env:OPENCODE_MODEL}",
      "prompt": "{file:./prompts/tester.txt}",
      "temperature": 0.0,
      "permission": {
        "edit": "deny",
        "bash": {
          "*": "deny",
          "flutter test *": "allow",
          "flutter test": "allow",
          "dart test *": "allow",
          "dart test": "allow",
          "melos test": "allow",
          "melos run test": "allow",
          "melos run analyze": "allow",
          "melos run format": "allow",
          "fvm flutter test *": "allow",
          "fvm flutter test": "allow",
          "fvm dart test *": "allow",
          "fvm dart test": "allow",
          "find": "allow",
          "grep": "allow",
          "ls": "allow",
          "cat": "allow",
          "head": "allow",
          "tail": "allow",
          "wc": "allow",
          "sort": "allow",
          "uniq": "allow"
        },
        "webfetch": "deny"
      },
      "tools": {
        "read": true,
        "bash": true,
        "grep": true,
        "glob": true,
        "list": true,
        "serena": true,
        "dart": true,
        "serena_activate_project": false,
        "serena_onboarding": false,
        "serena_get_current_config": false,
        "serena_check_onboarding_performed": false,
        "serena_think_about_task_adherence": false,
        "serena_think_about_whether_you_are_done": false
      }
    }
  },
  "lsp": {
    "dart": {
      "disabled": false,
      "command": [
        "fvm",
        "dart",
        "language-server",
        "--protocol=lsp"
      ],
      "extensions": [
        ".dart"
      ],
      "initialization": {
        "onlyAnalyzeProjectsWithOpenFiles": false,
        "suggestFromUnimportedLibraries": true,
        "closingLabels": true,
        "outline": true,
        "flutterOutline": true
      }
    }
  },
  "formatter": {
    "dart-fix": {
      "command": [
        "fvm",
        "dart",
        "fix",
        "--apply",
        "$FILE"
      ],
      "extensions": [
        ".dart"
      ]
    },
    "dart-import-sorter": {
      "command": [
        "fvm",
        "dart",
        "pub",
        "run",
        "import_sorter:main",
        "$FILE"
      ],
      "extensions": [
        ".dart"
      ]
    },
    "dart-format": {
      "command": [
        "fvm",
        "dart",
        "format",
        "$FILE"
      ]
    }
  },
  "mcp": {
    "dart": {
      "type": "local",
      "command": [
        "dart",
        "mcp-server",
        "--force-roots-fallback"
      ]
    },
    "serena": {
      "type": "local",
      "command": [
        "uvx",
        "--from",
        "git+https://github.com/oraios/serena",
        "serena",
        "start-mcp-server",
        "--context",
        "ide-assistant",
        "--project",
        "$(pwd)"
      ]
    }
  }
}