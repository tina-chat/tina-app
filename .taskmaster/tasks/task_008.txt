# Task ID: 8
# Title: Integrate Chat Components with BLoC
# Status: pending
# Dependencies: 4, 7
# Priority: high
# Description: Connect all UI components with the chat BLoC for complete functionality
# Details:
Wire ChatScreen with BlocProvider and BlocBuilder, connect MessageInput send action to SendMessage event, display messages from ChatReady state, show loading indicators during streaming, implement stop generation functionality, and handle error states with proper user feedback. Add BlocListener for side effects like scrolling and showing snackbars for errors.

# Test Strategy:
Integration tests for complete user flow: send message → streaming response → display, error handling scenarios, and stop generation functionality

# Subtasks:
## 1. Set up BlocProvider in widget tree [pending]
### Dependencies: None
### Description: Configure BlocProvider to make ChatBloc accessible throughout the chat screen widget hierarchy
### Details:
Wrap ChatScreen with BlocProvider<ChatBloc> in the widget tree, ensure proper bloc instance creation and disposal, and verify bloc is accessible to all child widgets that need it.

## 2. Connect MessageInput send actions to BLoC events [pending]
### Dependencies: 8.1
### Description: Wire MessageInput component to trigger SendMessage events when user submits messages
### Details:
Implement onSend callback in MessageInput that dispatches SendMessage event to ChatBloc, pass message content and metadata, and ensure proper event triggering on submit actions.

## 3. Implement BlocBuilder for displaying chat states and messages [pending]
### Dependencies: 8.1
### Description: Create BlocBuilder widgets to render different chat states and message lists based on ChatBloc state
### Details:
Build UI for ChatInitial, ChatReady, ChatStreaming, and ChatError states. Display message list from ChatReady state, show streaming indicators during ChatStreaming, and render appropriate UI for each state transition.

## 4. Add BlocListener for side effects [pending]
### Dependencies: 8.3
### Description: Implement BlocListener to handle side effects like auto-scrolling and error snackbars
### Details:
Use BlocListener to scroll to bottom on new messages, show snackbars for error states, handle navigation side effects, and manage other UI side effects that don't directly update the widget tree.

## 5. Implement loading indicators during streaming [pending]
### Dependencies: 8.3
### Description: Add visual feedback during message streaming and generation states
### Details:
Display loading indicators during ChatStreaming state, show typing indicators while AI is generating responses, implement shimmer effects for message placeholders, and provide clear visual feedback for ongoing operations.

## 6. Add stop generation functionality [pending]
### Dependencies: 8.3, 8.5
### Description: Implement ability for users to stop ongoing message generation
### Details:
Add stop generation button in AppBar or message input area, connect button to StopGeneration event in ChatBloc, handle stream cancellation gracefully, and provide user feedback when generation is stopped.

## 7. Create comprehensive error handling with user feedback [pending]
### Dependencies: 8.4
### Description: Implement robust error handling with clear user messaging and recovery options
### Details:
Handle ChatError states with user-friendly messages, implement retry functionality for failed requests, show connection status and network errors clearly, and provide actionable error messages with recovery suggestions.

